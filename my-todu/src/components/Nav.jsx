import React from 'react'
import Sidebar from './Sidebar'
import { useState } from 'react'
import AddTask from './AddTask'
import { useDispatch, useSelector } from 'react-redux'
import { toggleMenu,toggleTheme, toggleView } from '../utils/toggleSlice'
const Nav = () => {
 const[isOpen,setIsOpen]=useState(true)
 const dispatch =useDispatch();
 const toggleHandler=()=>{
  dispatch(toggleMenu());
}

const theme = useSelector((state) => state.toggle.theme);

const isCardView=useSelector((state)=>state.toggle.isCardView)

 return (
    // <div className='max-w-full h-full bg-[#FBFDFC] '>
    <div className={`w-full h-full ${theme === 'dark' ? 'bg-[#242424] text-white' : 'bg-[#FBFDFC] text-black'}`}>

    {/* </div> */}
<div className='flex justify-between items-center h-14 p-10'>
{/* left */}
  <div className='flex items-center gap-10'>
  <svg 
    onClick={()=>toggleHandler()}
    className="w-6 h-6  stroke-current fill-none dark:text-white cursor-pointer">
   {/* width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> */}
<path d="M3 12H21M3 6H21M3 18H21"  stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>


   
   <div className='flex items-center'>
   <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M6.71812 6.71757C7.71011 5.72557 9.59348 5.34578 12.2718 6.13352C12.4606 6.18905 12.6515 6.24999 12.8442 6.31629C11.6298 7.1782 10.44 8.18116 9.31084 9.31029C8.87424 9.74689 8.4572 10.1918 8.06039 10.643C7.51329 11.2651 7.57406 12.2129 8.19613 12.76C8.81819 13.3071 9.766 13.2463 10.3131 12.6243C10.6675 12.2213 11.0407 11.8231 11.4322 11.4316C12.9144 9.94939 14.4837 8.73835 16.0284 7.81847C17.573 8.73835 19.1423 9.94939 20.6245 11.4316C22.3065 13.1136 23.6393 14.9078 24.5937 16.6506C24.6229 16.7154 24.6568 16.7781 24.6951 16.8384C25.2348 17.8505 25.6458 18.8433 25.9226 19.7844C26.7104 22.4627 26.3306 24.346 25.3386 25.338C24.3466 26.33 22.4632 26.7098 19.7849 25.9221C19.5961 25.8666 19.4052 25.8056 19.2125 25.7393C20.4269 24.8774 21.6167 23.8745 22.7459 22.7453C23.1635 22.3277 23.5633 21.9024 23.9445 21.4713C24.4934 20.8508 24.4352 19.9028 23.8147 19.354C23.1942 18.8051 22.2462 18.8632 21.6974 19.4838C21.3568 19.8689 20.999 20.2495 20.6245 20.624C19.1423 22.1062 17.573 23.3173 16.0284 24.2371C14.4837 23.3173 12.9144 22.1062 11.4322 20.624C8.71081 17.9026 6.90357 14.8875 6.13407 12.2712C5.34634 9.59293 5.72612 7.70956 6.71812 6.71757ZM13.1183 3.25542C14.0718 3.53587 15.0479 3.92169 16.0284 4.40533C17.0088 3.92169 17.9849 3.53588 18.9384 3.25542C22.0611 2.33701 25.3277 2.46405 27.4599 4.59625C28.9191 6.05539 29.4396 8.07153 29.3296 10.159C29.2317 12.0189 28.6353 14.0318 27.6508 16.0278C28.1345 17.0082 28.5203 17.9843 28.8007 18.9379C29.7192 22.0605 29.5921 25.3272 27.4599 27.4594C25.3277 29.5916 22.0611 29.7186 18.9384 28.8002C17.9849 28.5197 17.0088 28.1339 16.0284 27.6503C15.0479 28.1339 14.0718 28.5197 13.1183 28.8002C9.99566 29.7186 6.72899 29.5916 4.5968 27.4594C3.13867 26.0012 2.61787 23.9868 2.72684 21.9009C2.82406 20.0398 3.42065 18.0253 4.40591 16.0279C3.92226 15.0474 3.53643 14.0713 3.25597 13.1177C2.33756 9.99511 2.4646 6.72844 4.5968 4.59624C6.72899 2.46405 9.99566 2.33701 13.1183 3.25542ZM22.7459 9.31029C21.6167 8.18116 20.4269 7.1782 19.2125 6.31629C19.4052 6.24999 19.5961 6.18905 19.7849 6.13352C22.4632 5.34579 24.3466 5.72557 25.3386 6.71757C26.0228 7.40176 26.4138 8.48246 26.3338 10.0013C26.2886 10.8601 26.0921 11.8198 25.7399 12.8437C24.878 11.6293 23.875 10.4394 22.7459 9.31029ZM9.31084 22.7453C10.44 23.8745 11.6298 24.8774 12.8442 25.7393C12.6515 25.8056 12.4606 25.8666 12.2718 25.9221C9.59348 26.7098 7.71011 26.33 6.71812 25.338C6.03437 24.6543 5.6435 23.5746 5.72275 22.0574C5.76765 21.1979 5.9642 20.2371 6.31683 19.2119C7.17874 20.4263 8.1817 21.6162 9.31084 22.7453ZM19 16C19 17.6569 17.6569 19 16 19C14.3431 19 13 17.6569 13 16C13 14.3431 14.3431 13 16 13C17.6569 13 19 14.3431 19 16Z" fill="#3F9142"/>
</svg>

<span className='font-sen font-bold text-2xl text-[#3F9142]'>DoIt</span>
</div>
  </div>
{/* right side */}
  <div className='flex gap-10'>
  <svg 
   className="w-6 h-6  stroke-current fill-none dark:text-white">
  {/* width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> */}
<path d="M21 21L16.65 16.65M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z" 
 stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
</svg>

<svg 

onClick={()=>dispatch(toggleView())}

 className="w-6 h-6  stroke-current fill-none dark:text-white">
{/* width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"> */}
<path fill="currentColor" d="M5 11q-.825 0-1.412-.587T3 9V5q0-.825.588-1.412T5 3h4q.825 0 1.413.588T11 5v4q0 .825-.587 1.413T9 11zm0 10q-.825 0-1.412-.587T3 19v-4q0-.825.588-1.412T5 13h4q.825 0 1.413.588T11 15v4q0 .825-.587 1.413T9 21zm10-10q-.825 0-1.412-.587T13 9V5q0-.825.588-1.412T15 3h4q.825 0 1.413.588T21 5v4q0 .825-.587 1.413T19 11zm0 10q-.825 0-1.412-.587T13 19v-4q0-.825.588-1.412T15 13h4q.825 0 1.413.588T21 15v4q0 .825-.587 1.413T19 21zM5 9h4V5H5zm10 0h4V5h-4zm0 10h4v-4h-4zM5 19h4v-4H5zM9 9"></path>
</svg>

<svg
          onClick={() => dispatch(toggleTheme())}
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          className='cursor-pointer'
        >
          {theme === 'light' ? (
            // Light Mode Icon
            <path
             d="M10 6C9.99965 7.40007 10.3667 8.77571 11.0646 9.98947C11.7624 11.2032 12.7666 12.2126 13.9767 12.9167C15.1868 13.6208 16.5605 13.995 17.9606 14.0019C19.3606 14.0088 20.738 13.6482 21.955 12.956C21.474 18.03 17.2 22 12 22C6.477 22 2 17.523 2 12C2 6.8 5.97 2.526 11.044 2.045C10.3574 3.24988 9.99754 4.61323 10 6ZM4 12C4 14.1217 4.84285 16.1566 6.34315 17.6569C7.84344 19.1571 9.87827 20 12 20C13.4136 20.0005 14.8021 19.6265 16.0241 18.916C17.2462 18.2054 18.2582 17.1838 18.957 15.955C18.6403 15.985 18.3213 16 18 16C12.477 16 8 11.523 8 6C8 5.67933 8.015 5.36033 8.045 5.043C6.81623 5.74185 5.79458 6.75381 5.08404 7.97585C4.37351 9.1979 3.99947 10.5864 4 12ZM18.164 2.291L19 2.5V3.5L18.164 3.709C17.8124 3.79693 17.4913 3.97875 17.235 4.23503C16.9788 4.4913 16.7969 4.8124 16.709 5.164L16.5 6H15.5L15.291 5.164C15.2031 4.8124 15.0212 4.4913 14.765 4.23503C14.5087 3.97875 14.1876 3.79693 13.836 3.709L13 3.5V2.5L13.836 2.291C14.1874 2.20291 14.5083 2.02102 14.7644 1.76475C15.0205 1.50849 15.2021 1.18748 15.29 0.836L15.5 0H16.5L16.709 0.836C16.7969 1.1876 16.9788 1.5087 17.235 1.76497C17.4913 2.02125 17.8124 2.20307 18.164 2.291ZM23.164 7.291L24 7.5V8.5L23.164 8.709C22.8124 8.79693 22.4913 8.97875 22.235 9.23503C21.9788 9.4913 21.7969 9.8124 21.709 10.164L21.5 11H20.5L20.291 10.164C20.2031 9.8124 20.0212 9.4913 19.765 9.23503C19.5087 8.97875 19.1876 8.79693 18.836 8.709L18 8.5V7.5L18.836 7.291C19.1876 7.20307 19.5087 7.02125 19.765 6.76497C20.0212 6.5087 20.2031 6.1876 20.291 5.836L20.5 5H21.5L21.709 5.836C21.7969 6.1876 21.9788 6.5087 22.235 6.76497C22.4913 7.02125 22.8124 7.20307 23.164 7.291Z"    stroke="black"
             fill="black"

            />
          ) : (
            // Dark Mode Icon
            <path
             d="M12 15q1.25 0 2.125-.875T15 12t-.875-2.125T12 9t-2.125.875T9 12t.875 2.125T12 15m0 2q-2.075 0-3.537-1.463T7 12t1.463-3.537T12 7t3.538 1.463T17 12t-1.463 3.538T12 17m-7-4H1v-2h4zm18 0h-4v-2h4zM11 5V1h2v4zm0 18v-4h2v4zM6.4 7.75L3.875 5.325L5.3 3.85l2.4 2.5zm12.3 12.4l-2.425-2.525L17.6 16.25l2.525 2.425zM16.25 6.4l2.425-2.525L20.15 5.3l-2.5 2.4zM3.85 18.7l2.525-2.425L7.75 17.6l-2.425 2.525zM12 12"     stroke="white"
            />
          )}
        </svg>

  </div>
</div>

{/* <Sidebar/> */}

   {/* <AddTask/> */}
   
    </div>
  )
}

export default Nav